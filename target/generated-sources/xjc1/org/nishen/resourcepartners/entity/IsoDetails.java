//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.27 at 11:50:46 AM AEST 
//


package org.nishen.resourcepartners.entity;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * ISO related details. Relevant and mandatory only if profile_type = ISO.
 * 
 * <p>Java class for iso_details complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="iso_details"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="alternative_document_delivery" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="ill_server" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="ill_port" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="iso_symbol" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="request_expiry_type" type="{}request_expiry_type"/&gt;
 *         &lt;element name="expiry_time" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="send_requester_information" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="shared_barcodes" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "iso_details", propOrder = {

})
public class IsoDetails
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "alternative_document_delivery", defaultValue = "false")
    protected Boolean alternativeDocumentDelivery;
    @XmlElement(name = "ill_server", required = true)
    protected String illServer;
    @XmlElement(name = "ill_port")
    protected int illPort;
    @XmlElement(name = "iso_symbol", required = true)
    protected String isoSymbol;
    @XmlElement(name = "request_expiry_type", required = true)
    protected RequestExpiryType requestExpiryType;
    @XmlElement(name = "expiry_time")
    protected Integer expiryTime;
    @XmlElement(name = "send_requester_information", defaultValue = "false")
    protected Boolean sendRequesterInformation;
    @XmlElement(name = "shared_barcodes", defaultValue = "false")
    protected Boolean sharedBarcodes;

    /**
     * Gets the value of the alternativeDocumentDelivery property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAlternativeDocumentDelivery() {
        return alternativeDocumentDelivery;
    }

    /**
     * Sets the value of the alternativeDocumentDelivery property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAlternativeDocumentDelivery(Boolean value) {
        this.alternativeDocumentDelivery = value;
    }

    /**
     * Gets the value of the illServer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIllServer() {
        return illServer;
    }

    /**
     * Sets the value of the illServer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIllServer(String value) {
        this.illServer = value;
    }

    /**
     * Gets the value of the illPort property.
     * 
     */
    public int getIllPort() {
        return illPort;
    }

    /**
     * Sets the value of the illPort property.
     * 
     */
    public void setIllPort(int value) {
        this.illPort = value;
    }

    /**
     * Gets the value of the isoSymbol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsoSymbol() {
        return isoSymbol;
    }

    /**
     * Sets the value of the isoSymbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsoSymbol(String value) {
        this.isoSymbol = value;
    }

    /**
     * Gets the value of the requestExpiryType property.
     * 
     * @return
     *     possible object is
     *     {@link RequestExpiryType }
     *     
     */
    public RequestExpiryType getRequestExpiryType() {
        return requestExpiryType;
    }

    /**
     * Sets the value of the requestExpiryType property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestExpiryType }
     *     
     */
    public void setRequestExpiryType(RequestExpiryType value) {
        this.requestExpiryType = value;
    }

    /**
     * Gets the value of the expiryTime property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExpiryTime() {
        return expiryTime;
    }

    /**
     * Sets the value of the expiryTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExpiryTime(Integer value) {
        this.expiryTime = value;
    }

    /**
     * Gets the value of the sendRequesterInformation property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSendRequesterInformation() {
        return sendRequesterInformation;
    }

    /**
     * Sets the value of the sendRequesterInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSendRequesterInformation(Boolean value) {
        this.sendRequesterInformation = value;
    }

    /**
     * Gets the value of the sharedBarcodes property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSharedBarcodes() {
        return sharedBarcodes;
    }

    /**
     * Sets the value of the sharedBarcodes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSharedBarcodes(Boolean value) {
        this.sharedBarcodes = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Boolean theAlternativeDocumentDelivery;
            theAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            strategy.appendField(locator, this, "alternativeDocumentDelivery", buffer, theAlternativeDocumentDelivery);
        }
        {
            String theIllServer;
            theIllServer = this.getIllServer();
            strategy.appendField(locator, this, "illServer", buffer, theIllServer);
        }
        {
            int theIllPort;
            theIllPort = this.getIllPort();
            strategy.appendField(locator, this, "illPort", buffer, theIllPort);
        }
        {
            String theIsoSymbol;
            theIsoSymbol = this.getIsoSymbol();
            strategy.appendField(locator, this, "isoSymbol", buffer, theIsoSymbol);
        }
        {
            RequestExpiryType theRequestExpiryType;
            theRequestExpiryType = this.getRequestExpiryType();
            strategy.appendField(locator, this, "requestExpiryType", buffer, theRequestExpiryType);
        }
        {
            Integer theExpiryTime;
            theExpiryTime = this.getExpiryTime();
            strategy.appendField(locator, this, "expiryTime", buffer, theExpiryTime);
        }
        {
            Boolean theSendRequesterInformation;
            theSendRequesterInformation = this.isSendRequesterInformation();
            strategy.appendField(locator, this, "sendRequesterInformation", buffer, theSendRequesterInformation);
        }
        {
            Boolean theSharedBarcodes;
            theSharedBarcodes = this.isSharedBarcodes();
            strategy.appendField(locator, this, "sharedBarcodes", buffer, theSharedBarcodes);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof IsoDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final IsoDetails that = ((IsoDetails) object);
        {
            Boolean lhsAlternativeDocumentDelivery;
            lhsAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            Boolean rhsAlternativeDocumentDelivery;
            rhsAlternativeDocumentDelivery = that.isAlternativeDocumentDelivery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativeDocumentDelivery", lhsAlternativeDocumentDelivery), LocatorUtils.property(thatLocator, "alternativeDocumentDelivery", rhsAlternativeDocumentDelivery), lhsAlternativeDocumentDelivery, rhsAlternativeDocumentDelivery)) {
                return false;
            }
        }
        {
            String lhsIllServer;
            lhsIllServer = this.getIllServer();
            String rhsIllServer;
            rhsIllServer = that.getIllServer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "illServer", lhsIllServer), LocatorUtils.property(thatLocator, "illServer", rhsIllServer), lhsIllServer, rhsIllServer)) {
                return false;
            }
        }
        {
            int lhsIllPort;
            lhsIllPort = this.getIllPort();
            int rhsIllPort;
            rhsIllPort = that.getIllPort();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "illPort", lhsIllPort), LocatorUtils.property(thatLocator, "illPort", rhsIllPort), lhsIllPort, rhsIllPort)) {
                return false;
            }
        }
        {
            String lhsIsoSymbol;
            lhsIsoSymbol = this.getIsoSymbol();
            String rhsIsoSymbol;
            rhsIsoSymbol = that.getIsoSymbol();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isoSymbol", lhsIsoSymbol), LocatorUtils.property(thatLocator, "isoSymbol", rhsIsoSymbol), lhsIsoSymbol, rhsIsoSymbol)) {
                return false;
            }
        }
        {
            RequestExpiryType lhsRequestExpiryType;
            lhsRequestExpiryType = this.getRequestExpiryType();
            RequestExpiryType rhsRequestExpiryType;
            rhsRequestExpiryType = that.getRequestExpiryType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestExpiryType", lhsRequestExpiryType), LocatorUtils.property(thatLocator, "requestExpiryType", rhsRequestExpiryType), lhsRequestExpiryType, rhsRequestExpiryType)) {
                return false;
            }
        }
        {
            Integer lhsExpiryTime;
            lhsExpiryTime = this.getExpiryTime();
            Integer rhsExpiryTime;
            rhsExpiryTime = that.getExpiryTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expiryTime", lhsExpiryTime), LocatorUtils.property(thatLocator, "expiryTime", rhsExpiryTime), lhsExpiryTime, rhsExpiryTime)) {
                return false;
            }
        }
        {
            Boolean lhsSendRequesterInformation;
            lhsSendRequesterInformation = this.isSendRequesterInformation();
            Boolean rhsSendRequesterInformation;
            rhsSendRequesterInformation = that.isSendRequesterInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendRequesterInformation", lhsSendRequesterInformation), LocatorUtils.property(thatLocator, "sendRequesterInformation", rhsSendRequesterInformation), lhsSendRequesterInformation, rhsSendRequesterInformation)) {
                return false;
            }
        }
        {
            Boolean lhsSharedBarcodes;
            lhsSharedBarcodes = this.isSharedBarcodes();
            Boolean rhsSharedBarcodes;
            rhsSharedBarcodes = that.isSharedBarcodes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sharedBarcodes", lhsSharedBarcodes), LocatorUtils.property(thatLocator, "sharedBarcodes", rhsSharedBarcodes), lhsSharedBarcodes, rhsSharedBarcodes)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Boolean theAlternativeDocumentDelivery;
            theAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativeDocumentDelivery", theAlternativeDocumentDelivery), currentHashCode, theAlternativeDocumentDelivery);
        }
        {
            String theIllServer;
            theIllServer = this.getIllServer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "illServer", theIllServer), currentHashCode, theIllServer);
        }
        {
            int theIllPort;
            theIllPort = this.getIllPort();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "illPort", theIllPort), currentHashCode, theIllPort);
        }
        {
            String theIsoSymbol;
            theIsoSymbol = this.getIsoSymbol();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isoSymbol", theIsoSymbol), currentHashCode, theIsoSymbol);
        }
        {
            RequestExpiryType theRequestExpiryType;
            theRequestExpiryType = this.getRequestExpiryType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestExpiryType", theRequestExpiryType), currentHashCode, theRequestExpiryType);
        }
        {
            Integer theExpiryTime;
            theExpiryTime = this.getExpiryTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expiryTime", theExpiryTime), currentHashCode, theExpiryTime);
        }
        {
            Boolean theSendRequesterInformation;
            theSendRequesterInformation = this.isSendRequesterInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendRequesterInformation", theSendRequesterInformation), currentHashCode, theSendRequesterInformation);
        }
        {
            Boolean theSharedBarcodes;
            theSharedBarcodes = this.isSharedBarcodes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sharedBarcodes", theSharedBarcodes), currentHashCode, theSharedBarcodes);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
