//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.27 at 11:50:46 AM AEST 
//


package org.nishen.resourcepartners.entity;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * NCIP related details. Relevant and mandatory only if profile_type = NCIP.
 * 
 * <p>Java class for ncip_details complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ncip_details"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="general_user_id_type" type="{}general_user_id_type"/&gt;
 *         &lt;element name="general_loan_period" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="general_pushing_method" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="generalURL_template" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="general_library_owner"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="general_enable_service_without_login" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="request_item_bib_type" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="request_item_support_borrowing" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="request_item_pickup_library"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="request_item_location"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="check_out_location"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="check_out_item_policy"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="accept_item_location"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="accept_item_pickup_library"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="accept_item_automatic_receive" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="accept_item_receive_desk" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="look_up_user_authentication" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="export_to_third_party" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="export_email_address" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="close_request_on_export" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ncip_details", propOrder = {

})
public class NcipDetails
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "general_user_id_type", required = true)
    protected GeneralUserIdType generalUserIdType;
    @XmlElement(name = "general_loan_period", required = true)
    protected String generalLoanPeriod;
    @XmlElement(name = "general_pushing_method", required = true)
    protected String generalPushingMethod;
    @XmlElement(name = "generalURL_template", required = true)
    protected String generalURLTemplate;
    @XmlElement(name = "general_library_owner", required = true)
    protected NcipDetails.GeneralLibraryOwner generalLibraryOwner;
    @XmlElement(name = "general_enable_service_without_login", required = true)
    protected String generalEnableServiceWithoutLogin;
    @XmlElement(name = "request_item_bib_type", required = true)
    protected String requestItemBibType;
    @XmlElement(name = "request_item_support_borrowing")
    protected boolean requestItemSupportBorrowing;
    @XmlElement(name = "request_item_pickup_library", required = true)
    protected NcipDetails.RequestItemPickupLibrary requestItemPickupLibrary;
    @XmlElement(name = "request_item_location", required = true)
    protected NcipDetails.RequestItemLocation requestItemLocation;
    @XmlElement(name = "check_out_location", required = true)
    protected NcipDetails.CheckOutLocation checkOutLocation;
    @XmlElement(name = "check_out_item_policy", required = true)
    protected NcipDetails.CheckOutItemPolicy checkOutItemPolicy;
    @XmlElement(name = "accept_item_location", required = true)
    protected NcipDetails.AcceptItemLocation acceptItemLocation;
    @XmlElement(name = "accept_item_pickup_library", required = true)
    protected NcipDetails.AcceptItemPickupLibrary acceptItemPickupLibrary;
    @XmlElement(name = "accept_item_automatic_receive")
    protected boolean acceptItemAutomaticReceive;
    @XmlElement(name = "accept_item_receive_desk", required = true)
    protected String acceptItemReceiveDesk;
    @XmlElement(name = "look_up_user_authentication", required = true)
    protected String lookUpUserAuthentication;
    @XmlElement(name = "export_to_third_party", required = true)
    protected String exportToThirdParty;
    @XmlElement(name = "export_email_address", required = true)
    protected String exportEmailAddress;
    @XmlElement(name = "close_request_on_export")
    protected boolean closeRequestOnExport;

    /**
     * Gets the value of the generalUserIdType property.
     * 
     * @return
     *     possible object is
     *     {@link GeneralUserIdType }
     *     
     */
    public GeneralUserIdType getGeneralUserIdType() {
        return generalUserIdType;
    }

    /**
     * Sets the value of the generalUserIdType property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneralUserIdType }
     *     
     */
    public void setGeneralUserIdType(GeneralUserIdType value) {
        this.generalUserIdType = value;
    }

    /**
     * Gets the value of the generalLoanPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeneralLoanPeriod() {
        return generalLoanPeriod;
    }

    /**
     * Sets the value of the generalLoanPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeneralLoanPeriod(String value) {
        this.generalLoanPeriod = value;
    }

    /**
     * Gets the value of the generalPushingMethod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeneralPushingMethod() {
        return generalPushingMethod;
    }

    /**
     * Sets the value of the generalPushingMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeneralPushingMethod(String value) {
        this.generalPushingMethod = value;
    }

    /**
     * Gets the value of the generalURLTemplate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeneralURLTemplate() {
        return generalURLTemplate;
    }

    /**
     * Sets the value of the generalURLTemplate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeneralURLTemplate(String value) {
        this.generalURLTemplate = value;
    }

    /**
     * Gets the value of the generalLibraryOwner property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.GeneralLibraryOwner }
     *     
     */
    public NcipDetails.GeneralLibraryOwner getGeneralLibraryOwner() {
        return generalLibraryOwner;
    }

    /**
     * Sets the value of the generalLibraryOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.GeneralLibraryOwner }
     *     
     */
    public void setGeneralLibraryOwner(NcipDetails.GeneralLibraryOwner value) {
        this.generalLibraryOwner = value;
    }

    /**
     * Gets the value of the generalEnableServiceWithoutLogin property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeneralEnableServiceWithoutLogin() {
        return generalEnableServiceWithoutLogin;
    }

    /**
     * Sets the value of the generalEnableServiceWithoutLogin property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeneralEnableServiceWithoutLogin(String value) {
        this.generalEnableServiceWithoutLogin = value;
    }

    /**
     * Gets the value of the requestItemBibType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestItemBibType() {
        return requestItemBibType;
    }

    /**
     * Sets the value of the requestItemBibType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequestItemBibType(String value) {
        this.requestItemBibType = value;
    }

    /**
     * Gets the value of the requestItemSupportBorrowing property.
     * 
     */
    public boolean isRequestItemSupportBorrowing() {
        return requestItemSupportBorrowing;
    }

    /**
     * Sets the value of the requestItemSupportBorrowing property.
     * 
     */
    public void setRequestItemSupportBorrowing(boolean value) {
        this.requestItemSupportBorrowing = value;
    }

    /**
     * Gets the value of the requestItemPickupLibrary property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.RequestItemPickupLibrary }
     *     
     */
    public NcipDetails.RequestItemPickupLibrary getRequestItemPickupLibrary() {
        return requestItemPickupLibrary;
    }

    /**
     * Sets the value of the requestItemPickupLibrary property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.RequestItemPickupLibrary }
     *     
     */
    public void setRequestItemPickupLibrary(NcipDetails.RequestItemPickupLibrary value) {
        this.requestItemPickupLibrary = value;
    }

    /**
     * Gets the value of the requestItemLocation property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.RequestItemLocation }
     *     
     */
    public NcipDetails.RequestItemLocation getRequestItemLocation() {
        return requestItemLocation;
    }

    /**
     * Sets the value of the requestItemLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.RequestItemLocation }
     *     
     */
    public void setRequestItemLocation(NcipDetails.RequestItemLocation value) {
        this.requestItemLocation = value;
    }

    /**
     * Gets the value of the checkOutLocation property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.CheckOutLocation }
     *     
     */
    public NcipDetails.CheckOutLocation getCheckOutLocation() {
        return checkOutLocation;
    }

    /**
     * Sets the value of the checkOutLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.CheckOutLocation }
     *     
     */
    public void setCheckOutLocation(NcipDetails.CheckOutLocation value) {
        this.checkOutLocation = value;
    }

    /**
     * Gets the value of the checkOutItemPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.CheckOutItemPolicy }
     *     
     */
    public NcipDetails.CheckOutItemPolicy getCheckOutItemPolicy() {
        return checkOutItemPolicy;
    }

    /**
     * Sets the value of the checkOutItemPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.CheckOutItemPolicy }
     *     
     */
    public void setCheckOutItemPolicy(NcipDetails.CheckOutItemPolicy value) {
        this.checkOutItemPolicy = value;
    }

    /**
     * Gets the value of the acceptItemLocation property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.AcceptItemLocation }
     *     
     */
    public NcipDetails.AcceptItemLocation getAcceptItemLocation() {
        return acceptItemLocation;
    }

    /**
     * Sets the value of the acceptItemLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.AcceptItemLocation }
     *     
     */
    public void setAcceptItemLocation(NcipDetails.AcceptItemLocation value) {
        this.acceptItemLocation = value;
    }

    /**
     * Gets the value of the acceptItemPickupLibrary property.
     * 
     * @return
     *     possible object is
     *     {@link NcipDetails.AcceptItemPickupLibrary }
     *     
     */
    public NcipDetails.AcceptItemPickupLibrary getAcceptItemPickupLibrary() {
        return acceptItemPickupLibrary;
    }

    /**
     * Sets the value of the acceptItemPickupLibrary property.
     * 
     * @param value
     *     allowed object is
     *     {@link NcipDetails.AcceptItemPickupLibrary }
     *     
     */
    public void setAcceptItemPickupLibrary(NcipDetails.AcceptItemPickupLibrary value) {
        this.acceptItemPickupLibrary = value;
    }

    /**
     * Gets the value of the acceptItemAutomaticReceive property.
     * 
     */
    public boolean isAcceptItemAutomaticReceive() {
        return acceptItemAutomaticReceive;
    }

    /**
     * Sets the value of the acceptItemAutomaticReceive property.
     * 
     */
    public void setAcceptItemAutomaticReceive(boolean value) {
        this.acceptItemAutomaticReceive = value;
    }

    /**
     * Gets the value of the acceptItemReceiveDesk property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcceptItemReceiveDesk() {
        return acceptItemReceiveDesk;
    }

    /**
     * Sets the value of the acceptItemReceiveDesk property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcceptItemReceiveDesk(String value) {
        this.acceptItemReceiveDesk = value;
    }

    /**
     * Gets the value of the lookUpUserAuthentication property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLookUpUserAuthentication() {
        return lookUpUserAuthentication;
    }

    /**
     * Sets the value of the lookUpUserAuthentication property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLookUpUserAuthentication(String value) {
        this.lookUpUserAuthentication = value;
    }

    /**
     * Gets the value of the exportToThirdParty property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExportToThirdParty() {
        return exportToThirdParty;
    }

    /**
     * Sets the value of the exportToThirdParty property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExportToThirdParty(String value) {
        this.exportToThirdParty = value;
    }

    /**
     * Gets the value of the exportEmailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExportEmailAddress() {
        return exportEmailAddress;
    }

    /**
     * Sets the value of the exportEmailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExportEmailAddress(String value) {
        this.exportEmailAddress = value;
    }

    /**
     * Gets the value of the closeRequestOnExport property.
     * 
     */
    public boolean isCloseRequestOnExport() {
        return closeRequestOnExport;
    }

    /**
     * Sets the value of the closeRequestOnExport property.
     * 
     */
    public void setCloseRequestOnExport(boolean value) {
        this.closeRequestOnExport = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            GeneralUserIdType theGeneralUserIdType;
            theGeneralUserIdType = this.getGeneralUserIdType();
            strategy.appendField(locator, this, "generalUserIdType", buffer, theGeneralUserIdType);
        }
        {
            String theGeneralLoanPeriod;
            theGeneralLoanPeriod = this.getGeneralLoanPeriod();
            strategy.appendField(locator, this, "generalLoanPeriod", buffer, theGeneralLoanPeriod);
        }
        {
            String theGeneralPushingMethod;
            theGeneralPushingMethod = this.getGeneralPushingMethod();
            strategy.appendField(locator, this, "generalPushingMethod", buffer, theGeneralPushingMethod);
        }
        {
            String theGeneralURLTemplate;
            theGeneralURLTemplate = this.getGeneralURLTemplate();
            strategy.appendField(locator, this, "generalURLTemplate", buffer, theGeneralURLTemplate);
        }
        {
            NcipDetails.GeneralLibraryOwner theGeneralLibraryOwner;
            theGeneralLibraryOwner = this.getGeneralLibraryOwner();
            strategy.appendField(locator, this, "generalLibraryOwner", buffer, theGeneralLibraryOwner);
        }
        {
            String theGeneralEnableServiceWithoutLogin;
            theGeneralEnableServiceWithoutLogin = this.getGeneralEnableServiceWithoutLogin();
            strategy.appendField(locator, this, "generalEnableServiceWithoutLogin", buffer, theGeneralEnableServiceWithoutLogin);
        }
        {
            String theRequestItemBibType;
            theRequestItemBibType = this.getRequestItemBibType();
            strategy.appendField(locator, this, "requestItemBibType", buffer, theRequestItemBibType);
        }
        {
            boolean theRequestItemSupportBorrowing;
            theRequestItemSupportBorrowing = this.isRequestItemSupportBorrowing();
            strategy.appendField(locator, this, "requestItemSupportBorrowing", buffer, theRequestItemSupportBorrowing);
        }
        {
            NcipDetails.RequestItemPickupLibrary theRequestItemPickupLibrary;
            theRequestItemPickupLibrary = this.getRequestItemPickupLibrary();
            strategy.appendField(locator, this, "requestItemPickupLibrary", buffer, theRequestItemPickupLibrary);
        }
        {
            NcipDetails.RequestItemLocation theRequestItemLocation;
            theRequestItemLocation = this.getRequestItemLocation();
            strategy.appendField(locator, this, "requestItemLocation", buffer, theRequestItemLocation);
        }
        {
            NcipDetails.CheckOutLocation theCheckOutLocation;
            theCheckOutLocation = this.getCheckOutLocation();
            strategy.appendField(locator, this, "checkOutLocation", buffer, theCheckOutLocation);
        }
        {
            NcipDetails.CheckOutItemPolicy theCheckOutItemPolicy;
            theCheckOutItemPolicy = this.getCheckOutItemPolicy();
            strategy.appendField(locator, this, "checkOutItemPolicy", buffer, theCheckOutItemPolicy);
        }
        {
            NcipDetails.AcceptItemLocation theAcceptItemLocation;
            theAcceptItemLocation = this.getAcceptItemLocation();
            strategy.appendField(locator, this, "acceptItemLocation", buffer, theAcceptItemLocation);
        }
        {
            NcipDetails.AcceptItemPickupLibrary theAcceptItemPickupLibrary;
            theAcceptItemPickupLibrary = this.getAcceptItemPickupLibrary();
            strategy.appendField(locator, this, "acceptItemPickupLibrary", buffer, theAcceptItemPickupLibrary);
        }
        {
            boolean theAcceptItemAutomaticReceive;
            theAcceptItemAutomaticReceive = this.isAcceptItemAutomaticReceive();
            strategy.appendField(locator, this, "acceptItemAutomaticReceive", buffer, theAcceptItemAutomaticReceive);
        }
        {
            String theAcceptItemReceiveDesk;
            theAcceptItemReceiveDesk = this.getAcceptItemReceiveDesk();
            strategy.appendField(locator, this, "acceptItemReceiveDesk", buffer, theAcceptItemReceiveDesk);
        }
        {
            String theLookUpUserAuthentication;
            theLookUpUserAuthentication = this.getLookUpUserAuthentication();
            strategy.appendField(locator, this, "lookUpUserAuthentication", buffer, theLookUpUserAuthentication);
        }
        {
            String theExportToThirdParty;
            theExportToThirdParty = this.getExportToThirdParty();
            strategy.appendField(locator, this, "exportToThirdParty", buffer, theExportToThirdParty);
        }
        {
            String theExportEmailAddress;
            theExportEmailAddress = this.getExportEmailAddress();
            strategy.appendField(locator, this, "exportEmailAddress", buffer, theExportEmailAddress);
        }
        {
            boolean theCloseRequestOnExport;
            theCloseRequestOnExport = this.isCloseRequestOnExport();
            strategy.appendField(locator, this, "closeRequestOnExport", buffer, theCloseRequestOnExport);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof NcipDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final NcipDetails that = ((NcipDetails) object);
        {
            GeneralUserIdType lhsGeneralUserIdType;
            lhsGeneralUserIdType = this.getGeneralUserIdType();
            GeneralUserIdType rhsGeneralUserIdType;
            rhsGeneralUserIdType = that.getGeneralUserIdType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalUserIdType", lhsGeneralUserIdType), LocatorUtils.property(thatLocator, "generalUserIdType", rhsGeneralUserIdType), lhsGeneralUserIdType, rhsGeneralUserIdType)) {
                return false;
            }
        }
        {
            String lhsGeneralLoanPeriod;
            lhsGeneralLoanPeriod = this.getGeneralLoanPeriod();
            String rhsGeneralLoanPeriod;
            rhsGeneralLoanPeriod = that.getGeneralLoanPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalLoanPeriod", lhsGeneralLoanPeriod), LocatorUtils.property(thatLocator, "generalLoanPeriod", rhsGeneralLoanPeriod), lhsGeneralLoanPeriod, rhsGeneralLoanPeriod)) {
                return false;
            }
        }
        {
            String lhsGeneralPushingMethod;
            lhsGeneralPushingMethod = this.getGeneralPushingMethod();
            String rhsGeneralPushingMethod;
            rhsGeneralPushingMethod = that.getGeneralPushingMethod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalPushingMethod", lhsGeneralPushingMethod), LocatorUtils.property(thatLocator, "generalPushingMethod", rhsGeneralPushingMethod), lhsGeneralPushingMethod, rhsGeneralPushingMethod)) {
                return false;
            }
        }
        {
            String lhsGeneralURLTemplate;
            lhsGeneralURLTemplate = this.getGeneralURLTemplate();
            String rhsGeneralURLTemplate;
            rhsGeneralURLTemplate = that.getGeneralURLTemplate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalURLTemplate", lhsGeneralURLTemplate), LocatorUtils.property(thatLocator, "generalURLTemplate", rhsGeneralURLTemplate), lhsGeneralURLTemplate, rhsGeneralURLTemplate)) {
                return false;
            }
        }
        {
            NcipDetails.GeneralLibraryOwner lhsGeneralLibraryOwner;
            lhsGeneralLibraryOwner = this.getGeneralLibraryOwner();
            NcipDetails.GeneralLibraryOwner rhsGeneralLibraryOwner;
            rhsGeneralLibraryOwner = that.getGeneralLibraryOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalLibraryOwner", lhsGeneralLibraryOwner), LocatorUtils.property(thatLocator, "generalLibraryOwner", rhsGeneralLibraryOwner), lhsGeneralLibraryOwner, rhsGeneralLibraryOwner)) {
                return false;
            }
        }
        {
            String lhsGeneralEnableServiceWithoutLogin;
            lhsGeneralEnableServiceWithoutLogin = this.getGeneralEnableServiceWithoutLogin();
            String rhsGeneralEnableServiceWithoutLogin;
            rhsGeneralEnableServiceWithoutLogin = that.getGeneralEnableServiceWithoutLogin();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalEnableServiceWithoutLogin", lhsGeneralEnableServiceWithoutLogin), LocatorUtils.property(thatLocator, "generalEnableServiceWithoutLogin", rhsGeneralEnableServiceWithoutLogin), lhsGeneralEnableServiceWithoutLogin, rhsGeneralEnableServiceWithoutLogin)) {
                return false;
            }
        }
        {
            String lhsRequestItemBibType;
            lhsRequestItemBibType = this.getRequestItemBibType();
            String rhsRequestItemBibType;
            rhsRequestItemBibType = that.getRequestItemBibType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItemBibType", lhsRequestItemBibType), LocatorUtils.property(thatLocator, "requestItemBibType", rhsRequestItemBibType), lhsRequestItemBibType, rhsRequestItemBibType)) {
                return false;
            }
        }
        {
            boolean lhsRequestItemSupportBorrowing;
            lhsRequestItemSupportBorrowing = this.isRequestItemSupportBorrowing();
            boolean rhsRequestItemSupportBorrowing;
            rhsRequestItemSupportBorrowing = that.isRequestItemSupportBorrowing();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItemSupportBorrowing", lhsRequestItemSupportBorrowing), LocatorUtils.property(thatLocator, "requestItemSupportBorrowing", rhsRequestItemSupportBorrowing), lhsRequestItemSupportBorrowing, rhsRequestItemSupportBorrowing)) {
                return false;
            }
        }
        {
            NcipDetails.RequestItemPickupLibrary lhsRequestItemPickupLibrary;
            lhsRequestItemPickupLibrary = this.getRequestItemPickupLibrary();
            NcipDetails.RequestItemPickupLibrary rhsRequestItemPickupLibrary;
            rhsRequestItemPickupLibrary = that.getRequestItemPickupLibrary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItemPickupLibrary", lhsRequestItemPickupLibrary), LocatorUtils.property(thatLocator, "requestItemPickupLibrary", rhsRequestItemPickupLibrary), lhsRequestItemPickupLibrary, rhsRequestItemPickupLibrary)) {
                return false;
            }
        }
        {
            NcipDetails.RequestItemLocation lhsRequestItemLocation;
            lhsRequestItemLocation = this.getRequestItemLocation();
            NcipDetails.RequestItemLocation rhsRequestItemLocation;
            rhsRequestItemLocation = that.getRequestItemLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItemLocation", lhsRequestItemLocation), LocatorUtils.property(thatLocator, "requestItemLocation", rhsRequestItemLocation), lhsRequestItemLocation, rhsRequestItemLocation)) {
                return false;
            }
        }
        {
            NcipDetails.CheckOutLocation lhsCheckOutLocation;
            lhsCheckOutLocation = this.getCheckOutLocation();
            NcipDetails.CheckOutLocation rhsCheckOutLocation;
            rhsCheckOutLocation = that.getCheckOutLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkOutLocation", lhsCheckOutLocation), LocatorUtils.property(thatLocator, "checkOutLocation", rhsCheckOutLocation), lhsCheckOutLocation, rhsCheckOutLocation)) {
                return false;
            }
        }
        {
            NcipDetails.CheckOutItemPolicy lhsCheckOutItemPolicy;
            lhsCheckOutItemPolicy = this.getCheckOutItemPolicy();
            NcipDetails.CheckOutItemPolicy rhsCheckOutItemPolicy;
            rhsCheckOutItemPolicy = that.getCheckOutItemPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkOutItemPolicy", lhsCheckOutItemPolicy), LocatorUtils.property(thatLocator, "checkOutItemPolicy", rhsCheckOutItemPolicy), lhsCheckOutItemPolicy, rhsCheckOutItemPolicy)) {
                return false;
            }
        }
        {
            NcipDetails.AcceptItemLocation lhsAcceptItemLocation;
            lhsAcceptItemLocation = this.getAcceptItemLocation();
            NcipDetails.AcceptItemLocation rhsAcceptItemLocation;
            rhsAcceptItemLocation = that.getAcceptItemLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemLocation", lhsAcceptItemLocation), LocatorUtils.property(thatLocator, "acceptItemLocation", rhsAcceptItemLocation), lhsAcceptItemLocation, rhsAcceptItemLocation)) {
                return false;
            }
        }
        {
            NcipDetails.AcceptItemPickupLibrary lhsAcceptItemPickupLibrary;
            lhsAcceptItemPickupLibrary = this.getAcceptItemPickupLibrary();
            NcipDetails.AcceptItemPickupLibrary rhsAcceptItemPickupLibrary;
            rhsAcceptItemPickupLibrary = that.getAcceptItemPickupLibrary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemPickupLibrary", lhsAcceptItemPickupLibrary), LocatorUtils.property(thatLocator, "acceptItemPickupLibrary", rhsAcceptItemPickupLibrary), lhsAcceptItemPickupLibrary, rhsAcceptItemPickupLibrary)) {
                return false;
            }
        }
        {
            boolean lhsAcceptItemAutomaticReceive;
            lhsAcceptItemAutomaticReceive = this.isAcceptItemAutomaticReceive();
            boolean rhsAcceptItemAutomaticReceive;
            rhsAcceptItemAutomaticReceive = that.isAcceptItemAutomaticReceive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemAutomaticReceive", lhsAcceptItemAutomaticReceive), LocatorUtils.property(thatLocator, "acceptItemAutomaticReceive", rhsAcceptItemAutomaticReceive), lhsAcceptItemAutomaticReceive, rhsAcceptItemAutomaticReceive)) {
                return false;
            }
        }
        {
            String lhsAcceptItemReceiveDesk;
            lhsAcceptItemReceiveDesk = this.getAcceptItemReceiveDesk();
            String rhsAcceptItemReceiveDesk;
            rhsAcceptItemReceiveDesk = that.getAcceptItemReceiveDesk();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemReceiveDesk", lhsAcceptItemReceiveDesk), LocatorUtils.property(thatLocator, "acceptItemReceiveDesk", rhsAcceptItemReceiveDesk), lhsAcceptItemReceiveDesk, rhsAcceptItemReceiveDesk)) {
                return false;
            }
        }
        {
            String lhsLookUpUserAuthentication;
            lhsLookUpUserAuthentication = this.getLookUpUserAuthentication();
            String rhsLookUpUserAuthentication;
            rhsLookUpUserAuthentication = that.getLookUpUserAuthentication();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookUpUserAuthentication", lhsLookUpUserAuthentication), LocatorUtils.property(thatLocator, "lookUpUserAuthentication", rhsLookUpUserAuthentication), lhsLookUpUserAuthentication, rhsLookUpUserAuthentication)) {
                return false;
            }
        }
        {
            String lhsExportToThirdParty;
            lhsExportToThirdParty = this.getExportToThirdParty();
            String rhsExportToThirdParty;
            rhsExportToThirdParty = that.getExportToThirdParty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "exportToThirdParty", lhsExportToThirdParty), LocatorUtils.property(thatLocator, "exportToThirdParty", rhsExportToThirdParty), lhsExportToThirdParty, rhsExportToThirdParty)) {
                return false;
            }
        }
        {
            String lhsExportEmailAddress;
            lhsExportEmailAddress = this.getExportEmailAddress();
            String rhsExportEmailAddress;
            rhsExportEmailAddress = that.getExportEmailAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "exportEmailAddress", lhsExportEmailAddress), LocatorUtils.property(thatLocator, "exportEmailAddress", rhsExportEmailAddress), lhsExportEmailAddress, rhsExportEmailAddress)) {
                return false;
            }
        }
        {
            boolean lhsCloseRequestOnExport;
            lhsCloseRequestOnExport = this.isCloseRequestOnExport();
            boolean rhsCloseRequestOnExport;
            rhsCloseRequestOnExport = that.isCloseRequestOnExport();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "closeRequestOnExport", lhsCloseRequestOnExport), LocatorUtils.property(thatLocator, "closeRequestOnExport", rhsCloseRequestOnExport), lhsCloseRequestOnExport, rhsCloseRequestOnExport)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            GeneralUserIdType theGeneralUserIdType;
            theGeneralUserIdType = this.getGeneralUserIdType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalUserIdType", theGeneralUserIdType), currentHashCode, theGeneralUserIdType);
        }
        {
            String theGeneralLoanPeriod;
            theGeneralLoanPeriod = this.getGeneralLoanPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalLoanPeriod", theGeneralLoanPeriod), currentHashCode, theGeneralLoanPeriod);
        }
        {
            String theGeneralPushingMethod;
            theGeneralPushingMethod = this.getGeneralPushingMethod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalPushingMethod", theGeneralPushingMethod), currentHashCode, theGeneralPushingMethod);
        }
        {
            String theGeneralURLTemplate;
            theGeneralURLTemplate = this.getGeneralURLTemplate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalURLTemplate", theGeneralURLTemplate), currentHashCode, theGeneralURLTemplate);
        }
        {
            NcipDetails.GeneralLibraryOwner theGeneralLibraryOwner;
            theGeneralLibraryOwner = this.getGeneralLibraryOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalLibraryOwner", theGeneralLibraryOwner), currentHashCode, theGeneralLibraryOwner);
        }
        {
            String theGeneralEnableServiceWithoutLogin;
            theGeneralEnableServiceWithoutLogin = this.getGeneralEnableServiceWithoutLogin();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalEnableServiceWithoutLogin", theGeneralEnableServiceWithoutLogin), currentHashCode, theGeneralEnableServiceWithoutLogin);
        }
        {
            String theRequestItemBibType;
            theRequestItemBibType = this.getRequestItemBibType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItemBibType", theRequestItemBibType), currentHashCode, theRequestItemBibType);
        }
        {
            boolean theRequestItemSupportBorrowing;
            theRequestItemSupportBorrowing = this.isRequestItemSupportBorrowing();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItemSupportBorrowing", theRequestItemSupportBorrowing), currentHashCode, theRequestItemSupportBorrowing);
        }
        {
            NcipDetails.RequestItemPickupLibrary theRequestItemPickupLibrary;
            theRequestItemPickupLibrary = this.getRequestItemPickupLibrary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItemPickupLibrary", theRequestItemPickupLibrary), currentHashCode, theRequestItemPickupLibrary);
        }
        {
            NcipDetails.RequestItemLocation theRequestItemLocation;
            theRequestItemLocation = this.getRequestItemLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItemLocation", theRequestItemLocation), currentHashCode, theRequestItemLocation);
        }
        {
            NcipDetails.CheckOutLocation theCheckOutLocation;
            theCheckOutLocation = this.getCheckOutLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkOutLocation", theCheckOutLocation), currentHashCode, theCheckOutLocation);
        }
        {
            NcipDetails.CheckOutItemPolicy theCheckOutItemPolicy;
            theCheckOutItemPolicy = this.getCheckOutItemPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkOutItemPolicy", theCheckOutItemPolicy), currentHashCode, theCheckOutItemPolicy);
        }
        {
            NcipDetails.AcceptItemLocation theAcceptItemLocation;
            theAcceptItemLocation = this.getAcceptItemLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemLocation", theAcceptItemLocation), currentHashCode, theAcceptItemLocation);
        }
        {
            NcipDetails.AcceptItemPickupLibrary theAcceptItemPickupLibrary;
            theAcceptItemPickupLibrary = this.getAcceptItemPickupLibrary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemPickupLibrary", theAcceptItemPickupLibrary), currentHashCode, theAcceptItemPickupLibrary);
        }
        {
            boolean theAcceptItemAutomaticReceive;
            theAcceptItemAutomaticReceive = this.isAcceptItemAutomaticReceive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemAutomaticReceive", theAcceptItemAutomaticReceive), currentHashCode, theAcceptItemAutomaticReceive);
        }
        {
            String theAcceptItemReceiveDesk;
            theAcceptItemReceiveDesk = this.getAcceptItemReceiveDesk();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemReceiveDesk", theAcceptItemReceiveDesk), currentHashCode, theAcceptItemReceiveDesk);
        }
        {
            String theLookUpUserAuthentication;
            theLookUpUserAuthentication = this.getLookUpUserAuthentication();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookUpUserAuthentication", theLookUpUserAuthentication), currentHashCode, theLookUpUserAuthentication);
        }
        {
            String theExportToThirdParty;
            theExportToThirdParty = this.getExportToThirdParty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "exportToThirdParty", theExportToThirdParty), currentHashCode, theExportToThirdParty);
        }
        {
            String theExportEmailAddress;
            theExportEmailAddress = this.getExportEmailAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "exportEmailAddress", theExportEmailAddress), currentHashCode, theExportEmailAddress);
        }
        {
            boolean theCloseRequestOnExport;
            theCloseRequestOnExport = this.isCloseRequestOnExport();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "closeRequestOnExport", theCloseRequestOnExport), currentHashCode, theCloseRequestOnExport);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class AcceptItemLocation
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.AcceptItemLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.AcceptItemLocation that = ((NcipDetails.AcceptItemLocation) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class AcceptItemPickupLibrary
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.AcceptItemPickupLibrary)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.AcceptItemPickupLibrary that = ((NcipDetails.AcceptItemPickupLibrary) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class CheckOutItemPolicy
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.CheckOutItemPolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.CheckOutItemPolicy that = ((NcipDetails.CheckOutItemPolicy) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class CheckOutLocation
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.CheckOutLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.CheckOutLocation that = ((NcipDetails.CheckOutLocation) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class GeneralLibraryOwner
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.GeneralLibraryOwner)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.GeneralLibraryOwner that = ((NcipDetails.GeneralLibraryOwner) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class RequestItemLocation
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.RequestItemLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.RequestItemLocation that = ((NcipDetails.RequestItemLocation) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class RequestItemPickupLibrary
        implements Equals, HashCode, ToString
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof NcipDetails.RequestItemPickupLibrary)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final NcipDetails.RequestItemPickupLibrary that = ((NcipDetails.RequestItemPickupLibrary) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
