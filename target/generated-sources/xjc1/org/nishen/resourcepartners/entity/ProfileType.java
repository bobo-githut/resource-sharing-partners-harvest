//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.27 at 11:50:46 AM AEST 
//


package org.nishen.resourcepartners.entity;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for profile_type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="profile_type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="ART_EMAIL"/&gt;
 *     &lt;enumeration value="NCIP"/&gt;
 *     &lt;enumeration value="ISO"/&gt;
 *     &lt;enumeration value="EMAIL"/&gt;
 *     &lt;enumeration value="NCIP_P2P"/&gt;
 *     &lt;enumeration value="SLNP"/&gt;
 *     &lt;enumeration value="EXTERNAL_SYSTEM"/&gt;
 *     &lt;enumeration value="BLDSS"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "profile_type")
@XmlEnum
public enum ProfileType {


    /**
     * Communication between Alma and the British Library resource sharing system.
     * 
     */
    ART_EMAIL("ART_EMAIL"),

    /**
     * Communication between Alma and resource sharing systems, such as OCLC Navigator, OCLC iLLiad, and Relais D2D, via NCIP 2.0 messages.
     * 
     */
    NCIP("NCIP"),

    /**
     * Communication between Alma and another resource sharing (Alma or non-Alma) system.
     * 
     */
    ISO("ISO"),

    /**
     * The sending of borrowing requests by the Alma borrowing partner via email.
     * 
     */
    EMAIL("EMAIL"),

    /**
     * NCIP-P2P protcol
     * 
     */
    @XmlEnumValue("NCIP_P2P")
    NCIP_P_2_P("NCIP_P2P"),

    /**
     * SLNP paretner type
     * 
     */
    SLNP("SLNP"),

    /**
     * External System paretner type
     * 
     */
    EXTERNAL_SYSTEM("EXTERNAL_SYSTEM"),

    /**
     * British Library Document Supply Service
     * 
     */
    BLDSS("BLDSS");
    private final String value;

    ProfileType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProfileType fromValue(String v) {
        for (ProfileType c: ProfileType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
