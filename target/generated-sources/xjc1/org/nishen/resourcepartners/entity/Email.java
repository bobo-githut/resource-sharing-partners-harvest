//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.27 at 11:50:46 AM AEST 
//


package org.nishen.resourcepartners.entity;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A partner's specific email address.
 * 
 * <p>Java class for email complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="email"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="email_address" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="email_types"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;choice maxOccurs="unbounded"&gt;
 *                   &lt;element name="email_type"&gt;
 *                     &lt;simpleType&gt;
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *                         &lt;enumeration value="order_mail"/&gt;
 *                         &lt;enumeration value="claim_mail"/&gt;
 *                         &lt;enumeration value="payment_mail"/&gt;
 *                         &lt;enumeration value="returns_mail"/&gt;
 *                         &lt;enumeration value="queries"/&gt;
 *                         &lt;enumeration value="ALL"/&gt;
 *                       &lt;/restriction&gt;
 *                     &lt;/simpleType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/choice&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/all&gt;
 *       &lt;attribute name="preferred" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "email", propOrder = {

})
public class Email
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "email_address", required = true)
    protected String emailAddress;
    protected String description;
    @XmlElement(name = "email_types", required = true)
    protected Email.EmailTypes emailTypes;
    @XmlAttribute(name = "preferred")
    protected Boolean preferred;

    /**
     * Gets the value of the emailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Sets the value of the emailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailAddress(String value) {
        this.emailAddress = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the emailTypes property.
     * 
     * @return
     *     possible object is
     *     {@link Email.EmailTypes }
     *     
     */
    public Email.EmailTypes getEmailTypes() {
        return emailTypes;
    }

    /**
     * Sets the value of the emailTypes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Email.EmailTypes }
     *     
     */
    public void setEmailTypes(Email.EmailTypes value) {
        this.emailTypes = value;
    }

    /**
     * Gets the value of the preferred property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isPreferred() {
        if (preferred == null) {
            return false;
        } else {
            return preferred;
        }
    }

    /**
     * Sets the value of the preferred property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPreferred(Boolean value) {
        this.preferred = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            strategy.appendField(locator, this, "emailAddress", buffer, theEmailAddress);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            Email.EmailTypes theEmailTypes;
            theEmailTypes = this.getEmailTypes();
            strategy.appendField(locator, this, "emailTypes", buffer, theEmailTypes);
        }
        {
            boolean thePreferred;
            thePreferred = ((this.preferred!= null)?this.isPreferred():false);
            strategy.appendField(locator, this, "preferred", buffer, thePreferred);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Email)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Email that = ((Email) object);
        {
            String lhsEmailAddress;
            lhsEmailAddress = this.getEmailAddress();
            String rhsEmailAddress;
            rhsEmailAddress = that.getEmailAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailAddress", lhsEmailAddress), LocatorUtils.property(thatLocator, "emailAddress", rhsEmailAddress), lhsEmailAddress, rhsEmailAddress)) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            Email.EmailTypes lhsEmailTypes;
            lhsEmailTypes = this.getEmailTypes();
            Email.EmailTypes rhsEmailTypes;
            rhsEmailTypes = that.getEmailTypes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailTypes", lhsEmailTypes), LocatorUtils.property(thatLocator, "emailTypes", rhsEmailTypes), lhsEmailTypes, rhsEmailTypes)) {
                return false;
            }
        }
        {
            boolean lhsPreferred;
            lhsPreferred = ((this.preferred!= null)?this.isPreferred():false);
            boolean rhsPreferred;
            rhsPreferred = ((that.preferred!= null)?that.isPreferred():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preferred", lhsPreferred), LocatorUtils.property(thatLocator, "preferred", rhsPreferred), lhsPreferred, rhsPreferred)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailAddress", theEmailAddress), currentHashCode, theEmailAddress);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            Email.EmailTypes theEmailTypes;
            theEmailTypes = this.getEmailTypes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailTypes", theEmailTypes), currentHashCode, theEmailTypes);
        }
        {
            boolean thePreferred;
            thePreferred = ((this.preferred!= null)?this.isPreferred():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preferred", thePreferred), currentHashCode, thePreferred);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * Email type.
     * 
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;choice maxOccurs="unbounded"&gt;
     *         &lt;element name="email_type"&gt;
     *           &lt;simpleType&gt;
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
     *               &lt;enumeration value="order_mail"/&gt;
     *               &lt;enumeration value="claim_mail"/&gt;
     *               &lt;enumeration value="payment_mail"/&gt;
     *               &lt;enumeration value="returns_mail"/&gt;
     *               &lt;enumeration value="queries"/&gt;
     *               &lt;enumeration value="ALL"/&gt;
     *             &lt;/restriction&gt;
     *           &lt;/simpleType&gt;
     *         &lt;/element&gt;
     *       &lt;/choice&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "emailType"
    })
    public static class EmailTypes
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "email_type")
        protected List<String> emailType;

        /**
         * Gets the value of the emailType property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the emailType property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getEmailType().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getEmailType() {
            if (emailType == null) {
                emailType = new ArrayList<String>();
            }
            return this.emailType;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<String> theEmailType;
                theEmailType = (((this.emailType!= null)&&(!this.emailType.isEmpty()))?this.getEmailType():null);
                strategy.appendField(locator, this, "emailType", buffer, theEmailType);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Email.EmailTypes)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Email.EmailTypes that = ((Email.EmailTypes) object);
            {
                List<String> lhsEmailType;
                lhsEmailType = (((this.emailType!= null)&&(!this.emailType.isEmpty()))?this.getEmailType():null);
                List<String> rhsEmailType;
                rhsEmailType = (((that.emailType!= null)&&(!that.emailType.isEmpty()))?that.getEmailType():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "emailType", lhsEmailType), LocatorUtils.property(thatLocator, "emailType", rhsEmailType), lhsEmailType, rhsEmailType)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<String> theEmailType;
                theEmailType = (((this.emailType!= null)&&(!this.emailType.isEmpty()))?this.getEmailType():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailType", theEmailType), currentHashCode, theEmailType);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
